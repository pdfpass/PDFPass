name: .NET

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
      - name: Restore dependencies
        run: dotnet restore
      - name: Set release version
        run: echo "release_Version=2024.10.1" | Out-File -FilePath $env:GITHUB_ENV -Append -Encoding utf8
        shell: pwsh      
      - name: Build
        run: dotnet publish -r win-x86 -c Release -p:DebugType=none --self-contained true /p:PublishSingleFile=true /p:IncludeNativeLibrariesForSelfExtract=true -o "bin\Release\"
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: published-app
          path: bin\Release
      - name: Set up Inno Setup
        run: | 
          choco upgrade innosetup -y
      - name: Create Release Folder (zip)
        run: New-Item -ItemType Directory -Force -Path release-zip\pdfpass-portable
      - name: Create Setup Folder (installer)
        run: New-Item -ItemType Directory -Force -Path release-inno
      - name: Copy Files to Release Folder
        run: |
          Copy-Item "bin\Release\PDFPass.exe" release-zip\pdfpass-portable
          Copy-Item "cmds\kontextove-menu-ako-admin-zaregistruj.cmd" release-zip\pdfpass-portable
          Copy-Item "cmds\kontextove-menu-ako-admin-odregistruj.cmd" release-zip\pdfpass-portable
          Copy-Item "cmds\pridaj-odkaz-na-plochu.cmd" release-zip\pdfpass-portable      
      - name: Zip Release Files
        run: Compress-Archive -Path release-zip\* -DestinationPath release-zip\PDFPass-portable.zip
      - name: Build installer with Inno Setup
        run: |
          & "C:\Program Files (x86)\Inno Setup 6\ISCC.exe" pdfpasss-inno.iss
      - name: List Output InnoSetup Directory
        run: |
          dir release-inno
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.release_Version }}
          release_name: Release ${{ env.release_Version }}
          draft: false
          prerelease: false
      - name: Upload Release Asset (zip)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release-zip\PDFPass-portable.zip
          asset_name: PDFPass-portable.zip # Choose a name for your release asset
          asset_content_type: application/octet-stream      
      - name: Upload Release Asset (installer)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release-inno\pdfpass-installer.exe
          asset_name: pdfpass-install.exe # Choose a name for your release asset
          asset_content_type: application/octet-stream
      - name: Upload Release Asset (popis)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: "Prečítať pred spustením inštalátora.pdf"
          asset_name: "Prečítať pred spustením inštalátora.pdf" # Choose a name for your release asset
          asset_content_type: application/octet-stream
